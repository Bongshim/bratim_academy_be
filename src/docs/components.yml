components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        userName:
          type: string
        phoneNumber:
          type: string
        profileImage:
          type: string
        about:
          type: string
        password:
          type: string
        role:
          type: string
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        firstName: John
        lastName: Doe
        middleName: Emris
        userName: JD
        phoneNumber: 12345678
        about: I am a software developer
        profileImage: http://profileimage.jpg
        password: password1

    Variable:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      example:
        id: 2343953
        name: username

    MessageTemplate:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        emailSubject:
          type: string
        emailBody:
          type: string
        smsSubject:
          type: string
        smsBody:
          type: string
      example:
        title: Welcome Email
        description: Welcome email to new users
        emailSubject: Welcome to the platform
        emailBody: Hello {{username}}, welcome to the platform
        smsSubject: Welcome to the platform
        smsBody: Hello {{username}}, welcome to the platform

    Category:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        icon:
          type: string
        parentId:
          type: integer
      example:
        name: Courses
        description: All courses
        icon: http://iconImg
        parentId: 0

    Course:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        slug:
          type: string
        image:
          type: string
        categoryId:
          type: integer
      example:
        title: Courses
        description: All courses
        slug: http://www.
        image: http://img
        categoryId: 0

    Forum:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
      example:
        title: Forums
        description: All forums

    Upload:
      type: object
      properties:
        url:
          type: string
        public_id:
          type: string
      example:
        url: http://example.com
        public_id: http://example.com

    CourseSession:
      type: object
      properties:
        title:
          type: string
          required: true
        description:
          type: string
          required: true
        cost:
          type: integer
          required: true
        image:
          type: string
          required: true
        link:
          type: string
          required: true
        enrollment_deadline:
          type: string
          required: true
        start_date:
          type: string
          required: true
        end_date:
          type: string
          required: true
        courseId:
          type: integer
          required: true
        lecturesIds:
          type: array
          items:
            type: integer
            required: true
      example:
        title: CS 101
        description: Introduction to computer science
        cost: 2000
        image: http://example.com
        link: http://example.com
        start_date: 2023-02-12T16:18:04.793Z
        end_date: 2023-05-12T16:18:04.793Z
        courseId: 1
        lecturesIds: [1, 5]

    CourseResource:
      type: object
      properties:
        title:
          type: string
          required: true
        description:
          type: string
          required: true
        resource_type:
          type: string
          required: true
        url:
          type: string
          required: true
        courseSessionId:
          type: integer
          required: true
      example:
        title: Class
        description: Link to class
        resource_type: link
        url: http://example.com
        courseSessionId: 1

    CreateCourseResource:
      type: object
      properties:
        title:
          type: string
          required: true
        description:
          type: string
          required: true
        resource_type:
          type: string
          required: true
        url:
          type: string
          required: true
      example:
        title: Class
        description: Link to class
        resource_type: link
        url: http://example.com

    Role:
      type: object
      properties:
        title:
          type: string
          required: true
        description:
          type: string
          required: true
        permissions:
          type: array
          items:
            type: integer
            required: true
      example:
        title: Admin
        description: All admin
        permissions: [1, 2, 3]

    Post:
      type: object
      properties:
        title:
          type: string
          required: true
        body:
          type: string
          required: true
        forumId:
          type: integer
          required: true
        tags:
          type: array
          items:
            type: string
            required: true
      example:
        title: Announcement.
        body: Welcome to this course. You can ask questions here.
        forumId: 1
        tags: [1, 2, 3]
    
    PostList:
      type: array
      items:
        $ref: '#/components/schemas/Post'


    Comment:
      type: object
      properties:
        text:
          type: string
          required: true
        postId:
          type: integer
          required: true
      example:
        text: Thank you. Looking forward to learning a lot.
        postId: 1

    Permission:
      type: object
      properties:
        name:
          type: string
          required: true
        value:
          type: string
          required: true
        groupName:
          type: string
          required: true
        description:
          type: string
          required: true
      example:
        name: Manage Users
        value: users.manage
        groupName: Users Permission
        description: Permission to create, delete and modify users

    Order:
      type: object
      properties:
        course:
          type: array
          items:
            type: integer
        paymentMethod:
          type: string
      example:
        course: [1, 2]
        paymentMethod: paystack

    Blog:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        image:
          type: string
        slug:
          type: string
        status:
          type: string
      example:
        title: Blog
        slug: blog-slug
        image: http://example.com
        content: Blog content

    Tag:
      type: object
      properties:
        name:
          type: string
      example:
        name: Tag


    BlogList:
      type: array
      items:
        $ref: '#/components/schemas/Blog'

    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'

    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found
    VariableNotFound:
      description: Variable not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Some variables do not exist
    DuplicateCategory:
      description: Category name already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Category name already taken

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
